{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "0fe603d3-35c8-4beb-8cb7-7b3f31909313",
   "metadata": {},
   "source": [
    "# Python Programming and Data Visualisation for Beginners \n",
    "\n",
    "Congratulations on deciding to learn a new skill! \n",
    "\n",
    "Python is a popular, general purpose programming language with applications in web development, software development, mathematics, data science, and many other areas. It has a thriving community and a long-term outlook, so the time and effort that you invest in learning Python now is likely to pay dividends in the future.\n",
    "\n",
    "This 8-week course focuses on data visualisation. By the end of it you will be able to load data into Python and make basic charts to describe the data, and you should also see the benefits of continuing to learn Python and using it instead of, or alongside, other familiar software such as Microsfot Excel. \n",
    "\n",
    "Although our focus will be on working with data, we will start from the very beginning and much of what you learn will prepare you for any future Python endeavors. For example, you may end up using Python as part of your everyday workflow, or you may be inspired to apply it to existing hobbies or to undertake fun and rewarding projects, such as using a [raspberry pi microcomputer](https://www.raspberrypi.com/products/) to make an [infrared bird box that live streams to YouTube](https://projects.raspberrypi.org/en/projects/infrared-bird-box), an [automatic cat feeder](https://www.robpeck.com/2017/11/robs-raspberry-pi-powered-cat-feeders/), an [environmental sensor for monitoring the health of plants](https://www.instructables.com/Raspberry-Pi-Powered-IOT-Garden/), or a [face recognition door lock](https://dillonmcc.myportfolio.com/auralock). \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb8e68d0",
   "metadata": {},
   "source": [
    "## Course overview\n",
    "\n",
    "The materials for this course are available from the following Google Drive link:\n",
    "\n",
    "  - https://drive.google.com/drive/folders/1Uo7LRb1mckiVBkjtNci8ejSZQT4Cxwna?usp=sharing\n",
    "\n",
    "What follows is a broad outline of what we will cover in the 2-hour sessions over the next 8 weeks. It may be subject to change at short notice! Please note that I will also provide practice worksheets that should keep you busy for 1-2 hours between our weekly sessions. \n",
    "\n",
    "  - **Week 0**: *An introduction to the Python programming language.* This will cover the history and community of the Python programming language and offer a broad overview of how it can be used. We will also take the opportunity in this first session to introduce the software that we will be using throughout the course ([Anaconda](https://www.anaconda.com/), [Jupyter](https://jupyter.org/), [Spyder](https://www.spyder-ide.org/)) and to make sure that everyone has downloaded and installed them successfully. \n",
    "\n",
    "\n",
    "  - **Week 1**: *Syntax, data types and built-in functions.* This will be an introduction to the very basics of Python. We will talk about syntax, the rules that govern how Python code should be written, and data types, the \"objects\" that are used to store bits of information, such as lists, tuples, booleans, dictionaries, integers, strings, and floating points. We will also consider functions that are already \"built in\" to the language.\n",
    "\n",
    "\n",
    "  - **Week 2**: *Operators, control flow statements and defining functions.* This will be a light introduction to mathematical operators (e.g., `/`, `*`, `+`, `-`), logical operators (e.g., `and`, `not`, `or`) and control flow statements (e.g., `if`, `while`, `for`), which are combined to create complex expressions and determine how a program is executed. For example, you may want to only execute some code if a certain condition is true, in which case you can use a logical `if` statement. Or you may want to execute some code until a certain condition is met, in which case you would use a `while` statement. We will also cover how to define functions to handle repetitive tasks. \n",
    "\n",
    "\n",
    "  - **Week 3**: *Imports, the standard library, and third party libraries.* In Python, most functionality is buried away in modules that must be imported at the beginning of a script. This session will cover how to locate and import relevant modules, and it will explore what is already available in the [Python standard library](https://docs.python.org/3/library/). Examples include `os`, `time`, `datetime`, `math`, `random`, `csv`, etc. We will also talk about third party libraries. Owing to its popularity and widespread adoption, Python has a thriving development community. There are literally hundreds of thousands of Python packages, all designed to solve particular problems. This session will introduce the [Python Package Index](https://pypi.org/) (where different python packages are stored) and how to search for and install packages that may be of interest. Finally, I will introduce three key packages that we will use in the next four sessions: [numpy](https://numpy.org/), the core numerical computing package for python; [matplotlib](https://matplotlib.org/), a powerful plotting library for making graphs; and [pandas](https://pandas.pydata.org/), an advanced package for handling and manipulating large datasets. \n",
    "\n",
    "\n",
    "  - **Week 4**: *An introduction to data visualisation*. Today we will begin by exploring basic principles of data visualisation and considering different methods of presenting data, such as line graphs, scatter plots and bar charts. We will look at examples of what are widely considered to be some of the best and worst data visualisations ever made, which is a great way to refresh one's chart reading abilities. I will then introduce three separate data sets that we will be using for the rest of the course and demonstrate how to load the data and make basic charts.\n",
    "\n",
    "\n",
    "  - **Week 5**: *numpy, matplotlib, and pandas.* This session will explore these three packages in depth. We will begin by exploring the key functionality of numpy and work through examples of how to create and operate on numerical arrays. Then we will import matplotlib and visualise the data from numpy. Finally, we will import pandas and use it to load and describe the example datasets. By the end of the session, you will be able to import these packages, load example data, and make basic plots. \n",
    "\n",
    "\n",
    "  - **Week 6**: *Locating and visualising interesting data.* This session will focus on locating data and describing the data with visualisations using numpy, matplotlib and pandas. I will then set an assignment for nexts weekâ€™s presentations, which will involve locating some data, loading it into python, and making a plot that describes the data. You may choose from some set examples that I will provide, or come up with your own idea entirely. \n",
    "\n",
    "\n",
    "  - **Week 7**: *2-5 min presentations and inspiration.* In this session you will give a short presentation on the assignment set in the previous week. I will then describe some of my own Python projects and aim to inspire you with ideas for continuing your Python development. \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad7e7d7c",
   "metadata": {},
   "source": [
    "## Getting help\n",
    "\n",
    "As a beginner learning Python, the internet will almost certainly have answers to any questions that may arise, but knowing how to find them can be tricky. A carefully worded google search is usually the best place to start for specific issues, but you may wish to bookmark the following resources.\n",
    "\n",
    "### General\n",
    "\n",
    "  - [What is Python?](https://www.python.org/doc/essays/blurb/) - the executive summary.\n",
    "  - [The Python Language Reference](https://docs.python.org/3/reference/index.html#reference-index) - Technical, informative, dry. If all of Python suddenly disappeared and had to be re-implemented from a single document, this is the one. \n",
    "  - [The Python Standard Library](https://docs.python.org/3/library/index.html) - Documentation for the 200+ modules in the standard library.\n",
    "\n",
    "### Self-guided tutorials\n",
    "\n",
    "For supplementary learning during the course, or continued learning afterwards.\n",
    "\n",
    "  - [The official Python Tutorial](https://docs.python.org/3/tutorial/index.html#tutorial-index) - Comprehensive and at times entertaining.\n",
    "  - [W3schools' Python tutorial](https://www.w3schools.com/python/default.asp) - Comprehensive, interactive and easy to navigate.\n",
    "  - [Codeacademy Python tutorials](https://www.codecademy.com/catalog/language/python) - Free and paid courses covering a wide range of topics and for all levels of ability. \n",
    "  \n",
    "### Websites\n",
    "\n",
    "  - [RealPython](https://realpython.com/) - A great website with tutorials and articles for all abilities. \n",
    "  - [learnpython.org](https://www.learnpython.org/) - Another great websites with trivia and tutorials for all abilities.\n",
    "  - [StackOverflow](https://stackoverflow.com/questions/tagged/python) - Probably the best place to search for answers to Python-related questions, or to ask questions if you can't find the answer you are looking for. \n",
    "  - [PythonCheatSheet](https://www.pythoncheatsheet.org/cheatsheet/basics) - A very useful language reference for all levels\n",
    "\n",
    "### Social media\n",
    "\n",
    "If you use Twitter and want to fill up your feed with Python trivia, consider following these accounts:\n",
    "\n",
    "  - @[driscollis](https://twitter.com/driscollis) - Mike Driscoll writes Python tutorials and posts about Python every day. His \"Python pop quizes\" often focus on strange and unexpected features of Python.\n",
    "  - @[randal_olson](https://twitter.com/randal_olson) - Randy Olson is a data scientist who frequently tweets about Python and data visualisation. \n",
    "  - @[TalkPython](https://twitter.com/TalkPython) - The #1 Python-focused podcast covering the people and ideas in Python. Created and hosted by @mkennedy. \n",
    "  - @[PythonHub](https://twitter.com/PythonHub) - News and links about Python programming.\n",
    "  - @[PythonStack](https://twitter.com/PythonStack) - StackOverflow feed of Python questions matching certain criteria.\n",
    "  \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "41c0a358",
   "metadata": {},
   "source": [
    "## Finally...\n",
    "\n",
    "It is often said that Python is one of the easiest programming languages to learn. This may be true in a relative sense, but the learning curve can be steep for beginners. If at times you find yourself feeling frustrated, overwhelmed, or out of your depth, remind yourself that this is completely normal, and believe me when I say that there is nothing quite like the feeling of satisfaction that accompanies those *Ah ha* moments, when your perseverance pays off and you finally *get it*!\n",
    "\n",
    "I hope you enjoy learning Python. Please don't hesitate to contact me directly if you need a hand at any point throughout the course.\n",
    "\n",
    "Joel Martin\n",
    "\n",
    "[joel.martin@york.ac.uk](mailto:joel.martin@york.ac.uk?subject=Python)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f2ab0995-7492-4090-9cc2-06d8b1bef4f0",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
